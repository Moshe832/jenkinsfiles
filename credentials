pipeline {
    agent any

    stages {
        stage('API URL') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'moshe1234', usernameVariable: 'USER', passwordVariable: 'PASS')]) {
                    script {
                        powershell """
                        #Define the API URL
                        \$url = "https://reqres.in/api/login"

                        # Define the username and password
                        #\$username = "eve.holt@reqres.in"
                        #\$password = "pistol"

                        # Encode the username and password in Base64 for Basic Authentication
                        \$base64AuthInfo = [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes("\${env:USER}:\${env:PASS}"))
                        
                            #for check Authorization header
                            #---------------------------------
                            #Decode the Base64 string to a byte array
                            \$decodedBytes = [System.Convert]::FromBase64String(\$base64AuthInfo)

                            # Convert the byte array to a string
                            \$decodedString = [System.Text.Encoding]::ASCII.GetString(\$decodedBytes)

                            # Output the decoded string
                            write-host "\$decodedString good"

                        # Create the headers for the request
                        \$headers = @{
                            "Authorization" = "Basic \$base64AuthInfo"
                            "Content-Type"  = "application/json"
                        }

                        # Define the POST data (e.g., sending login details as JSON)
                        \$body = '{"email": "eve.holt@reqres.in", "password": "pistol"}'

                        # Perform the POST request with Basic Authentication
                        \$response = Invoke-RestMethod -Uri \$url -Method Post -Headers \$headers -Body \$body
                        write-host =======
                        # Output the response
                        Write-Host \$response
                        write-host =======

                        """
                    }
                }
            }
        }
    }
}
