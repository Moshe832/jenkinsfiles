
pipeline {
    agent any
    parameters {
        string(
            name: 'VERSION',
            defaultValue: '200.0.00',
            description: 'Enter a version number (e.g., 200.0.00 for Full, others for Delta)'
        )
    }
    environment {
        delta = 'false'
    }
    stages {
        stage('Check Version Type') {
            steps {
                    def fullPattern = /^\d{3}\.0\.\d{2}$/  // Matches nnn.0.nn (Full Release)
                    def deltaPattern = /^\d{3}\.\d\.\d{2}$/ // Matches any other nnn.x.nn (Delta Update)
                    // Check for Full Release
                    if (VERSION ==~ fullPattern) {
                        delta = false
                    // Check for Delta Update
                    } else if (VERSION ==~ deltaPattern) {
                        delta = true
                    
                    // If the version does not match either, it's invalid
                    else {
                        error('‚ùå Invalid version format! Only nnn.0.nn for Full Release or nnn.x.nn for Delta Update.')
                    }
                }
            }
        }
        stage('Deploy') {
                if (${delta} == 'false') {
                when {
                    expression { return !delta }
                }
                if (\$delta -eq \$false) {
                if ${delta} -eq \$false {
                    echo "Deploying Full Release..."
                } else {
                    echo "Deploying Delta Update..."
                }
                """

            }

        }
    }
}
    }
