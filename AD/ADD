pipeline {
    agent { label 'windows' }

    parameters {
        string(name: 'UserName', description: 'Username (e.g., john.doe)' ,defaultValue: 'john.doe')
        string(name: 'GroupName', description: 'Group name' , defaultValue: 'admins')
        string(name: 'StartDate', description: 'Start date (yyyy-MM-dd)', defaultValue: '2023-10-01')
    }
environment {
    jsonFilePath = "${env.WORKSPACE}\\userAccessList"
}

options {
    // Timeout counter starts AFTER agent is allocated
    timeout(time: 300, unit: 'SECONDS')
}

stages {
    stage('Echo Workspace') {
        steps {
            script {
                // Print workspace using Groovy inside the script block
                echo "The workspace directory is: ${env.WORKSPACE}"
                echo "The current directory is: ${pwd()}"
                echo "The JSON file path is: ${env.jsonFilePath}"
            }
        }
    }

    stage('Append to JSON') {
        steps {
            powershell '''
                # Get Jenkins parameters from environment
                $userName = $env:UserName
                $groupName = $env:GroupName
                $startDate = $env:StartDate

                # Define file path
                $jsonFilePath = "$env:jsonFilePath"

                # Load existing JSON array or initialize new array
                if (Test-Path $jsonFilePath) {
                    $existingJson = Get-Content $jsonFilePath -Raw | ConvertFrom-Json
                } else {
                    $existingJson = @()
                }

                # Create new user object
                $newUser = [PSCustomObject]@{
                    UserName  = $userName
                    GroupName = $groupName
                    StartDate = $startDate
                }

                # Append to array
                $updatedJson = $existingJson + $newUser

                # Save updated JSON back to file
                $updatedJson | ConvertTo-Json -Depth 2 | Out-File -FilePath $jsonFilePath -Encoding UTF8

                Write-Host "Appended new user to JSON:"
                $newUser | ConvertTo-Json -Depth 2
            '''
        }
    }

    stage('Upload JSON to Repo') {
        steps {
            powershell '''
                cd $env:WORKSPACE
                git config user.email "jenkins@example.com"
                git config user.name "Jenkins CI"
                git add "$env:jsonFilePath"
                git commit -m "Update userAccessList via pipeline for $env:UserName"
                git push origin HEAD:main
            '''
        }
    }
}

    post {
        always {
            echo "Pipeline completed."
        }
    }

}
// Compare this snippet from AD/AD_user_group: